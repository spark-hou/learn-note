(self.webpackChunklearn_note=self.webpackChunklearn_note||[]).push([[164],{30164:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return a}});var d=n(66252),s=(0,d.HX)("data-v-4e4194ba");(0,d.dD)("data-v-4e4194ba");var u={class:"Python"},g={class:"g-container"},h=(0,d.Wm)("div",{class:"g-block"},null,-1),p=(0,d.Wm)("div",{class:"g-block"},null,-1),f=(0,d.Wm)("div",{id:"g6"},null,-1);(0,d.Cn)();var t=s(function(e,t,n,i,a,r){var o=(0,d.up)("a-anchor-link"),l=(0,d.up)("a-anchor"),c=(0,d.up)("a-page-header");return(0,d.wg)(),(0,d.j4)("div",u,[(0,d.Wm)(l,{class:"toc-affix"},{default:s(function(){return[(0,d.Wm)(o,{href:"#Top",title:"Top"}),(0,d.Wm)(o,{href:"#haha",title:"Basic demo"})]}),_:1}),(0,d.Wm)("div",g,[(0,d.Wm)(c,{id:"Top",style:{border:"1px solid rgb(235, 237, 240)"},title:e.title,onBack:e.backUp},null,8,["title","onBack"]),h,p,f])])}),r=n(42119),o=n(75257),l=n(13782),c=(n(92222),n(21249),n(96053)),i=c.ZP.Util,m=["#5B8FF9","#5AD8A6","#5D7092","#F6BD16","#6F5EF9","#6DC8EC","#D3EEF9","#DECFEA","#FFE0C7","#1E9493","#BBDEDE","#FF99C3","#FFE0ED","#CDDDFD","#CDF3E4","#CED4DE","#FCEBB9","#D3CEFD","#945FB9","#FF9845"];c.ZP.registerNode("dice-mind-map-root",{jsx:function(e){var t=i.getTextSize(e.label,16)[0]+24,n=e.style.stroke||"#096dd9";return'\n      <group>\n        <rect draggable="true" style={{width: '.concat(t,", height: 42, stroke: ").concat(n,", radius: 4}} keyshape>\n          <text style={{ fontSize: 16, marginLeft: 12, marginTop: 12 }}>").concat(e.label,"</text>\n          <text style={{ marginLeft: ").concat(t-16,", marginTop: -20, stroke: '#66ccff', fill: '#000', cursor: 'pointer', opacity: ").concat(e.hover?.75:0,' }} action="add">+</text>\n        </rect>\n      </group>\n    ')},getAnchorPoints:function(){return[[0,.5],[1,.5]]}},"single-node"),c.ZP.registerNode("dice-mind-map-sub",{jsx:function(e){var t=i.getTextSize(e.label,14)[0]+24,n=e.color||e.style.stroke;return'\n      <group>\n        <rect draggable="true" style={{width: '.concat(t+24,', height: 22}} keyshape>\n          <text draggable="true" style={{ fontSize: 14, marginLeft: 12, marginTop: 6 }}>').concat(e.label,"</text>\n          <text style={{ marginLeft: ").concat(t-8,", marginTop: -10, stroke: ").concat(n,", fill: '#000', cursor: 'pointer', opacity: ").concat(e.hover?.75:0,", next: 'inline' }} action=\"add\">+</text>\n          <text style={{ marginLeft: ").concat(t-4,", marginTop: -10, stroke: ").concat(n,", fill: '#000', cursor: 'pointer', opacity: ").concat(e.hover?.75:0,", next: 'inline' }} action=\"delete\">-</text>\n        </rect>\n        <rect style={{ fill: ").concat(n,", width: ").concat(t+24,", height: 2, x: 0, y: 22 }} />\n\n      </group>\n    ")},getAnchorPoints:function(){return[[0,.965],[1,.965]]}},"single-node"),c.ZP.registerNode("dice-mind-map-leaf",{jsx:function(e){var t=i.getTextSize(e.label,12)[0]+24,n=e.color||e.style.stroke;return'\n      <group>\n        <rect draggable="true" style={{width: '.concat(t+20,", height: 26, fill: 'transparent' }}>\n          <text style={{ fontSize: 12, marginLeft: 12, marginTop: 6 }}>").concat(e.label,"</text>\n              <text style={{ marginLeft: ").concat(t-8,", marginTop: -10, stroke: ").concat(n,", fill: '#000', cursor: 'pointer', opacity: ").concat(e.hover?.75:0,", next: 'inline' }} action=\"add\">+</text>\n              <text style={{ marginLeft: ").concat(t-4,", marginTop: -10, stroke: ").concat(n,", fill: '#000', cursor: 'pointer', opacity: ").concat(e.hover?.75:0,", next: 'inline' }} action=\"delete\">-</text>\n        </rect>\n        <rect style={{ fill: ").concat(n,", width: ").concat(t+24,", height: 2, x: 0, y: 32 }} />\n\n      </group>\n    ")},getAnchorPoints:function(){return[[0,.965],[1,.965]]}},"single-node"),c.ZP.registerBehavior("scroll-canvas",{getEvents:function(){return{wheel:"onWheel"}},onWheel:function(e){var t,n,i=this.graph;i&&(e.ctrlKey?(n=i.get("canvas").getPointByClient(e.clientX,e.clientY),t=i.getZoom(),0<e.wheelDelta?t+=.05*t:t*=.05*t,i.zoomTo(t,{x:n.x,y:n.y})):(t=e.deltaX||e.movementX,n=e.deltaY||e.movementY||125*-e.wheelDelta/3,i.translate(-t,-n)),e.preventDefault())}});var v=c.ZP.Util,n=(0,d.aZ)({name:"Python",setup:function(){function e(){var e=document.getElementById("g6"),t=e.scrollWidth,n=(e.scrollHeight||500)-20;a.value||(a.value=new c.ZP.TreeGraph({container:e,width:t,height:n,fitView:!0,fitViewPadding:[10,20],layout:{type:"mindmap",direction:"H",getHeight:function(){return 16},getWidth:function(e){return 0===e.level?v.getTextSize(e.label,16)[0]+12:v.getTextSize(e.label,12)[0]},getVGap:function(){return 10},getHGap:function(){return 60},getSide:function(){return"right"}},defaultEdge:{type:"cubic-horizontal",style:{lineWidth:2}},minZoom:.5,modes:{default:["drag-canvas","zoom-canvas","dice-mindmap"]}})),a.value.data(function n(e){var i=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0,t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:0,a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:"",r=(0,l.Z)({},e);switch(i){case 0:r.type="dice-mind-map-root";break;case 1:r.type="dice-mind-map-sub";break;default:r.type="dice-mind-map-leaf"}return r.hover=!1,1===i&&(r.color=m[t]),a&&(r.color=a),r.direction="left",e.children&&(r.children=e.children.map(function(e,t){return n(e,i+1,t,r.color||"")})),r}(i)),a.value.render()}var t=(0,r.tv)(),i={label:"Modeling Methods",id:"0",children:[{label:"Classification",id:"0-1",children:[{label:"Logistic regression",id:"0-1-1",children:[{label:"Logistic regression",id:"0-1-1-1"},{label:"Logistic regression",id:"0-1-1-2"}]},{label:"Linear discriminant analysis",id:"0-1-2"},{label:"Rules",id:"0-1-3"},{label:"Decision trees",id:"0-1-4"},{label:"Naive Bayes",id:"0-1-5"},{label:"Support vectomachine",id:"0-1-6"},{label:"Probabilistic neural network",id:"0-1-7"},{label:"Support vectomachine",id:"0-1-8"}]}]},a={value:null};return(0,d.bv)(function(){e()}),(0,d.Ah)(function(){(0,o.Kk)(a)}),{title:"Python笔记",backUp:function(){t.back()}}}});n.render=t,n.__scopeId="data-v-4e4194ba";var a=n}}]);